var tipuesearch = {"pages":[{"title":"About","text":"2017Fall 機械設計工程系 CADP & CP 課程倉儲: https://mde1a1.kmol.info/2017fall 課程投影片: https://mde1a1.kmol.info/2017fall/doc/trunk/index.html 課程網誌: https://mde1a1.kmol.info/2017fall/doc/trunk/blog/","tags":"misc","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/pages/about/"},{"title":"2017 Fall CP 第九週 期中考心得","text":"W9 Exam 心得影片","tags":"Course","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/40623209_2017-fall-cp-w9.html"},{"title":"2017 Fall CP 第七週 Exam","text":"W7 Exam 操作影片 學習心得 從來沒有接觸過程式方面的課程，所以一開始接觸時有些不習慣甚至完全不懂，經歷了三週的導入週，回家也會慢慢摸索到底該如何使用程式後，到現在已經可以運用自如了。 自評成績 每週出席狀況:100% 紙本筆記:70% 隨身碟內容:70% 各週上課摘要:65% 自評分數:75%","tags":"Course","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/40623209_2017-fall-cp-w7.html"},{"title":"2017 Fall CP 第八週 Exam","text":"W8 Exam 操作影片 學習心得 第八週學習了如何妥善運用eric6此程式，經過多次練習後，已經可以運用自如。 自評成績 每週出席狀況:100% 紙本筆記:70% 隨身碟內容:70% 各週上課摘要:65% 自評分數:75%","tags":"Course","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/40623209_2017-fall-cp-w8.html"},{"title":"2017 Fall CP 第五週","text":"W5 雙十國慶節日放假","tags":"Course","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/40623209_2017-fall-cp-w5.html"},{"title":"2017 Fall CP 第六週","text":"W6 複習前幾週的上課內容及 git clone Github 上的倉儲 從最原始的 fossil init 在伺服器建立倉儲開始，說明如何建立網誌。 當使用 Fossil SCM 倉儲時, 如何在操作系統與 Pelican 轉檔過程正確改版 如何 git clone Github 上的倉儲, 如何使用 eric6 IDE 開始開發 PyQt5 程式 Y:>cd tmp Y:\\tmp>mkdir github Y:\\tmp>cd github Y:\\tmp\\github>git clone https://github.com/kmolab/rpcalc.git 就可以在 github 的資料夾中找尋複製下來的資料 開起兩個 eric6 一個開 github 一個自己建計算器的專案 按 Project Open 開啟 github 檔案 github>rpcalc>pyqt5_calculator>calculator.e4p 然後按 Start Run Project 之後按 OK 就可以執行 另一個按 Project New 新增一個 Project 1.專案名稱 ( Project Name ) 是 cp Project1 或者 cp 2.程式 ( Progr. Language) 是 Python3 3.用的 GUI ( Project Type ) 是 PyQt5 GUI 4.對應專案的目錄 ( Project Directory ) 是 tmp>py 5.主要程式還沒寫, 所以 Main Script 可以先不要寫, 等到建好了再把程式的名稱打上去 按 OK 後，它就會問你有沒有已經存在的程式要加到這個專案，按 No 切換到圖形塊 ( Forms ) 後, 按滑鼠右鍵點 New Forms, 一開始先試一下 Dialog， 然後存檔, 檔名 cal ( calculator ) 存檔目錄 tmp>py>gui, 然後就會跑出 Qt Designer 抓它的圖形 ( Push Button ), 拉到你要的位置, 然後打 1, 儲存後, 就可以回去 cp - eric6 把它轉成 Python 的程式才能執行 ( Comple form ) 然後按回 Sources 點兩下查看,然後按 Strart 點 Run Script 執行程式, 就可以看到剛剛的畫面 重複上面的動作拉圖形並查看。","tags":"Course","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/40623209_2017-fall-cp-w6.html"},{"title":"2017 Fall CP 第四週","text":"W4 利用 Leo Editor 改近端資料並推到遠端 用 SciTE 開啟 launchLeo.py 按 Tools 裡的 Go 開啟 yen.leo 開始改網誌 將遠端的網址改為: https://cpb.kmol.info/40623209/doc/trunk/blog 把 Author: yen 的 yen 改成 40623209 在 pelican-blog 上按右鍵 Goto Script 再點一下pelican-blog 就完成近端執行。 在 https-server 上按右鍵 Goto Script 就可以在 https://localhost:5443/#/ 看近端資料 用 fossil ststus 檢查看看有沒有錯誤 在 github-blog 上按右鍵 Goto Script 再點一下 github-blog 轉成遠端程式。 用 fossil add .所有資料再 fossil commit -m\" \" 推送資料，就可以去遠端看資料 每一個檔案的 Slug 都要有唯一性。","tags":"Course","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/40623209_2017-fall-cadp-w4.html"},{"title":"2017 Fall CP 第三週","text":"W3 建立倉儲 Y:>mkdir tmp Y:>cd tmp Y:\\tmp>mkdir fossil Y:\\tmp>cd fossil 倉儲綁定帳號 Y:\\tmp\\fossil>fossil clone https://40623209@cpb.kmol.info/40623209 40623209.fossil password for 40623209: clone cpb 主機上的4062倉儲 Y:\\tmp\\fossil>fossil clone https://@cpb.kmol.info/4062 4062.fossil 用 fossil open 將 40623209 的倉儲開啟至工作目錄中 Y:\\tmp\\fossil>mkdir wd Y:\\tmp\\fossil>cd wd Y:\\tmp\\fossil\\wd>mkdir 40623209 Y:\\tmp\\fossil\\wd>cd 40623209 Y:\\tmp\\fossil\\wd\\40623209>fossil open ./../../40623209.fossil 用 fossil open 將 4062 的倉儲開啟至工作目錄中 Y:\\tmp\\fossil\\wd\\40623209>cd .. Y:\\tmp\\fossil\\wd>mkdir 4062 Y:\\tmp\\fossil\\wd>cd 4062 Y:\\tmp\\fossil\\wd\\4062>fossil open ./../../4062.fossil 複製4062倉儲內容到40623209時，不要複製FOSSIL和pycache兩個目錄，其餘包含網誌與投影片架構的檔案放入40623209開啟後的倉儲目錄中，然後新增所有檔案，並且提交後自動推回遠端，同時近端的 40623209.fossil 也將與遠端及工作目錄中的內容保持同步。 Y:\\tmp\\fossil\\wd\\4062>cd .. Y:\\tmp\\fossil\\wd>cd 40623209 Y:\\tmp\\fossil\\wd\\40623209>fossil add . Y:\\tmp\\fossil\\wd\\40623209>fossil commit -m \"add blod and reveal files\" Y:\\tmp\\fossil\\wd\\40623209>fossil push https://40623209@cpb.kmol.info/40623209 完成將 blog 與 reveal 投影片送到 cpb.kmol.info 後, 可以透過40623209倉儲下的 /doc/trunk/index.html 檢視最新版投影片，從 /doc/trunk/blog/index.html 檢視最新版的網誌。若要查看舊版的資料， 可以將 trunk 換成版次號碼。","tags":"Course","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/40623209_2017-fall-cadp-w3.html"},{"title":"2017 Fall CP 第二週","text":"本學期起各班透過一台 Ubuntu 16.04 主機, 建立 Fossil SCM 伺服器, 且每一學員發放一個 Fossil SCM 倉儲, 其中各學員可以利用 Wiki 與 Technote 紀錄學習資料外, 還可以將靜態網誌與簡報檔案放入 Files 資料區. 測試沒有綁定帳號後, 指定帳號新增提交推送版本. 測試 commit 時沒有 --user-override 4062 測試 push 才綁帳號 configuration - 組成內容與狀態 scm - software configuration management batch - 批次 remark - 註解 default - 內定, 默認 fossil clone - 克隆 fossil add - 新增 fossil commit - 提交 fossil push - 推送 fossil remote-url off fossil ui - user interface url - uniform resource locator https - secure hypertext transfer protocol protocol - 協定 certification - 簽章 - public key server certify - 認證 vacuum - 吸塵 fossil clone https://mde1a1.kmol.info/pymcadp pymcadp.fossil IDE - Integrated Development Environment 希望為每位學員建立倉儲的設想流程如下: 各學員可以獨立維護倉儲內容, 也可以在總管理員的權限下, 為分組學員建立帳號, 逐步導入協同設計 各學員的倉儲以修課班級命名伺服器, 以學號命名倉儲, 方便依照此一規律擷取各學員的倉儲頁面. 各學員能以電子郵件收到與新建倉儲相關的連結, 以及帳號密碼. 必須擴增 Ubuntu ulimits -n 同時開檔的設限範圍 (內定只允許同時開啟 1024 個檔案) 解決方案: 主機名稱可以透過 domain dns 中的 CNAME 別名方式處理, 因為目前所能提供出來的 IPv4/IPv6 雙支援主機, 之前已經都設定了符號名稱. fossil init 雖然提供指定管理者的 -A 選項功能, 但是無法直接指定管理者對應密碼, 因此必須建立倉儲之後, 再利用 fossil user 修改密碼, 之後再利用 Gmail 寄出通知信, 其中提供倉儲連結, 登入帳號與密碼等資訊. 建立各學員倉儲檔案的程式如下, 如前所述, 主要透過兩個 Fossil SCM 指令完成, 在 Windows 採用 Fossil SCM 2.3 版建立所有 .fossil 倉儲時, 將同時以 email 通知各學員. 各學員的 .fossil 檔案再以 sftp 送到伺服主機對應帳號所屬的目錄下. 必須要特別注意的是, 採用 Fossil SCM 2.3 版所建立的 .fossil 倉儲檔案, 在 Ubuntu 操作系統上也必須採用相同版本的 fossil, 否則舊版 fossil 可能無法開啟新版 fossil 程式所建立的倉儲檔. import os import string import random # 使用 Gmail 寄信必須導入下列模組 import smtplib import re from email.mime.text import MIMEText from email.header import Header # 用來以亂數建立密碼的韓式 def id_generator(size=6, chars=string.ascii_uppercase + string.digits): ''' source: https://stackoverflow.com/questions/2257441/random-string-generation-with-upper-case-letters-and-digits-in-python ''' return ''.join(random.choice(chars) for _ in range(size)) # 讀取學員名單, 逐一取得學員學號, 學員名單, 檢查點 1/7 student_data = open(\"2017fall_list/1b.txt\").read() student_list = student_data.splitlines() # 利用 gmail smtp 功能寄信 server = smtplib.SMTP('smtp.gmail.com:587') server.ehlo() server.starttls() # 以下必須準備好對應郵件帳號與密碼的外部檔案, 所提供的寄信帳號, 是否可以寄信, 檢查點 2/7 ''' 寄信之前必須到 https://www.google.com/settings/security/lesssecureapps 修改權限, 改為較低安全權限 否則無法使用程式寄信! ''' # 從外部檔案讀取要用來寄信的 gmail 帳號與密碼 # mail.txt 格式為: 電子郵箱,對應密碼, 以逗點隔開, 檢查點 3/7 email_data = open(\"z:/2017fall/mail.txt\").read() email, email_password= email_data.split(\",\") print(email, email_password) # 是否登入所提供寄信的電子郵箱, 4/7 server.login(email, email_password) # 不同課程名稱, 與對應主機名稱, 必須配合修改 5/7 course_title = \"計算機程式\" fossil_server = \"cpb.kmol.info\" for student_num in student_list: username = student_num repository = username + '.fossil' # 利用所提供的字串, 以亂數組成六個字元的密碼 password = id_generator(6, \"23456789abcdef\") print(student_num, \", \" , password) # 執行 dos command 指令, 建立倉儲 os.system(\"fossil init -A \" +username + \" \" + repository) print(\"已經建立倉儲 \" + repository) # 執行 dos command 指令, 修改使用者密碼 os.system(\"fossil user password \" + username + \" \" + password + \" -R \" + repository) print(\"已經修改密碼\") # 利用 Gmail 寄信, 告知各學員倉儲連結與帳號密碼 # 每一位學員收到的 output 都從這裡 reset output = \"\" # 若學號欄為空, 則不寄信 if student_num != \"\": # output 為寄給每一位學員的資料表格 mail_content = student_num+' 您好: 您在 '+course_title+' 課程中的區域網路倉儲: https://'+fossil_server+'/'+student_num+' ' mail_content += '管理帳號為:'+ student_num + ' 管理密碼為: '+ password+' ' print(student_num) print(mail_content) # 至此 mail_content 已經確定 # 在測試與實際寄送資料, 也必須配合修改, 檢查點 6/7 receiver_email = student_num + \"@gm.nfu.edu.tw\" # 測試用 #receiver_email = student_num+\"@mde.tw\" # 列出收信人 email 位址 #print(receiver_email) #message= MIMEText(mail_content,'plain','UTF-8') # 以 html 格式寄信 message= MIMEText(mail_content,'html','UTF-8') message['Subject'] = Header(course_title+\" Fossil SCM 帳號通知\", 'UTF-8') # 可以先不寄信, 確定格式正確後再開啟, 是否實際寄出信件, 檢查點 7/7 server.sendmail(\"gmail_address\", receiver_email, message.as_string()) server.quit() 各班所完成的主機: 二甲電腦輔助設計實習: https://cadpa.kmol.info 二乙電腦輔助設計實習: https://cadpb.kmol.info 一甲計算機程式: https://cpa.kmol.info 一乙計算機程式: https://cpb.kmol.info","tags":"Course","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/40623209_2017-fall-cadp-w2.html"},{"title":"2017 Fall CP 第一週","text":"W1 了解何謂機械設計(機械設計就是一種表達) 工程師有六種表達方式: 1.口語 2.文字 3.2D 4.3D 5.數學理論 6.實作表達 創造力有三個基本要素: 1.自學力(提升自我解題能力) 2.執行力(運用所學解決問題) 3.想像力 當累積一定經驗後, 就能透過想像、自學與執行過程之整合運用, 創造出具效能的創新產品 互動元件有三個: 1.固體 2.流體 3.軟體 機械是一種器物, 由互動元件精巧組合, 互動運作, 達成特定功能 因此機械設計就是靈活運用六種表達及互動元件可做的互動運作, 達到預定結果與具體表達 由於機械設計流程牽涉許多固體、流體與軟體元件配置, 而且當多名成員在協同設計過程中, 會於不同時間納入各種機械設計組成及六種表達內容, 因此必須要設法運用組態管理 (Configuration Management) 系統, 呈現各時間點詳細的組成內容與狀態 課堂練習 點資料夾 python2017fall_36 , 按 start.bat 開啟隨身系統, 在 SCiTE 編輯器中練習執行 calculator.py 與 helloworld.c calculator.py 可以利用 PyQt5 example calculator 關鍵字搜尋, 而 ANSI (American National Standard Institute) C 則可以透過 ANSI C hello world 關鍵字搜尋 SCM 軟體配置管理(Software Configuration Management)","tags":"Course","url":"https://cpb.kmol.info/40623209/doc/trunk/blog/40623209_2017-fall-cadp-w1.html"}]};